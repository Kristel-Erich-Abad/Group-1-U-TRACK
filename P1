package App;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.IOException;

public class P1 extends JFrame {
    private static final long serialVersionUID = 1L;

    public P1() throws IOException {
        setTitle("U-TRACK Application");
        setSize(1100, 600);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setResizable(false);
        setLocationRelativeTo(null);
        getContentPane().setLayout(null);

        JLabel backgroundLabel = new JLabel();
        backgroundLabel.setBounds(0, 0, 1086, 563);
        backgroundLabel.setIcon(new ImageIcon("C:\\Users\\Huawei\\Downloads\\Copy of Untitled (1100 x 600 px).png"));
        getContentPane().add(backgroundLabel);

        JLabel welcomeLabel = new JLabel("WELCOME TO THE", SwingConstants.CENTER);
        welcomeLabel.setForeground(Color.WHITE);
        welcomeLabel.setFont(new Font("Arial Black", Font.BOLD, 65));
        welcomeLabel.setBounds(0, 260, 1086, 79);
        backgroundLabel.add(welcomeLabel);

        JLabel universityLabel = new JLabel("UNIVERSITY OF MAKATI", SwingConstants.CENTER);
        universityLabel.setForeground(Color.WHITE);
        universityLabel.setFont(new Font("Arial Black", Font.BOLD, 65));
        universityLabel.setBounds(0, 330, 1086, 85);
        backgroundLabel.add(universityLabel);

        JLabel logoLabel = new JLabel();
        logoLabel.setIcon(new ImageIcon("C:\\Users\\Huawei\\Documents\\IMAGES\\Untitled (Circle Sticker) (6).png"));
        logoLabel.setBounds(443, 80, 200, 169);
        backgroundLabel.add(logoLabel);

        RoundedButton btnSignUp = new RoundedButton("SIGN UP", 30);
        btnSignUp.setBackground(new Color(134,152,196));  
        btnSignUp.setForeground(new Color(245,245,245));
        btnSignUp.setFont(new Font("Archivo", Font.PLAIN, 17));
        btnSignUp.setBounds(600, 473, 163, 33);
        backgroundLabel.add(btnSignUp);
        
        btnSignUp.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                try {
                    P2SignUp loginFrame = new P2SignUp();
                    loginFrame.setVisible(true);
                    dispose();
                } catch (Exception ex) {
                    ex.printStackTrace();
                }
            }
        });
        
        RoundedButton btnSignIn = new RoundedButton("SIGN IN", 30);
        btnSignIn.setBackground(new Color(134,152,196));   
        btnSignIn.setForeground(new Color(245,245,245));
        btnSignIn.setFont(new Font("Archivo", Font.PLAIN, 17));
        btnSignIn.setBounds(300, 473, 163, 33);
        backgroundLabel.add(btnSignIn);

        btnSignIn.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                try {
                    P2SignIn loginFrame = new P2SignIn();
                    loginFrame.setVisible(true);
                    dispose();
                } catch (Exception ex) {
                    ex.printStackTrace();
                }
            }
        });
    }
    
    public class RoundedButton extends JButton {
		private static final long serialVersionUID = 1L;
		private int radius;

		public RoundedButton(String text, int radius) {
			super(text);
			this.radius = radius;
			setContentAreaFilled(false);
			setFocusPainted(false);
			setBorderPainted(false);
			setOpaque(false);
			setForeground(Color.WHITE);
			setFont(new Font("Tahoma", Font.PLAIN, 15));
		}
		
		@Override
		protected void paintComponent(Graphics g) {
		    Graphics2D g2 = (Graphics2D) g.create();
		    g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
		    g2.setColor(getBackground());
		    g2.fillRoundRect(0, 0, getWidth(), getHeight(), radius, radius);
		    super.paintComponent(g2);
		    g2.dispose();
		}

    }

    public static void main(String[] args) {
        EventQueue.invokeLater(() -> {
            try {
                P1 frame = new P1();
                frame.setVisible(true);
            } catch (Exception e) {
                e.printStackTrace();
            }
        });
    }
}
